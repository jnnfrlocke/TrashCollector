@model IEnumerable<TrashCollector.Models.WastePickups>

@{
    ViewBag.Title = "TodaysPickups";
}

<h2>Today's Pickups</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.StreetNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StreetName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Apartment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Zip)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StreetNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StreetName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Apartment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Zip)
        </td>
    </tr>
}

</table>

<script src='@string.Format("https://maps.google.com/maps/api/js?key={0}", Credentials.GoogleApiKey)' ,type="text/javascript"></script>


<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- info window -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />
<!-- Map -->
<div id="map_canvas" style="height: 550px;"></div>

@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    $(document).ready(function () {
        Initialize();
    });

    function Initialize() {

        google.maps.visualRefresh = true;
            var MitchellOnWater = new google.maps.LatLng(43.043526, -87.914886);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 14,
            center: MitchellOnWater,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        var data = [
            { "Id": 1, "GeoLong": "43.043526", "GeoLat": "-87.914886" },
            //{
            //    "Id": 2, "PlaceName": "DoMUS Apartments", "GeoLong": "43.0291769", "GeoLat": "-87.90456449999999" },
            //{ "Id": 3, "PlaceName": "Pritzlaff Lofts",/* TODO: Customize appearance of popup "Address":"313 N Plankinton Ave\nMilwaukee, WI 53203",*/ "GeoLong": "43.0342677", "GeoLat": "-87.9114481" },
            //      //{ "Id": 4, "PlaceName": "", "GeoLong": "34.745159", "GeoLat": "10.7613" }
               ];

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName,
                'address': item.Address
            });

            // Make the marker-pin green!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            //google.maps.event.addListener(marker, 'click', function () {
            //    infowindow.open(map, marker);
            //});

        })
    }
        </script>
    </section>
    }
